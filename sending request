// Send the request using the `metadata` with our key from earlier
const generation = generationClient.generate(request, metadata);

// Set up a callback to handle data being returned
generation.on("data", (data) => {
  data.getArtifactsList().forEach((artifact) => {
    // Oh no! We were filtered by the NSFW classifier!
    if (
      artifact.getType() === Generation.ArtifactType.ARTIFACT_TEXT &&
      artifact.getFinishReason() === Generation.FinishReason.FILTER
    ) {
      return console.error("Your image was filtered by the NSFW classifier.");
    }

    // Make sure we have an image
    if (artifact.getType() !== Generation.ArtifactType.ARTIFACT_IMAGE) return;

    // You can convert the raw binary into a base64 string
    const base64Image = btoa(
      new Uint8Array(artifact.getBinary()).reduce(
        (data, byte) => data + String.fromCodePoint(byte),
        ""
      )
    );

    // Here's how you get the seed back if you set it to `0` (random)
    const seed = artifact.getSeed();

    // We're done!
    someFunctionToCallWhenFinished({ seed, base64Image });
  });
});

// Anything other than `status.code === 0` is an error
generation.on("status", (status) => {
  if (status.code === 0) return;
  console.error(
    "Your image could not be generated. You might not have enough credits."
  );
});
